INTRODUCTION
-------------
-Art of drawing pictures on computer screens with the help of programming.
-Involves computations, creation, and manipulations of data.
-rendering tools for the generation and manilulation of imaes.
-Cathod ray tube- prmary output device in a graphical system i
->programming language that can be included on out  pages to make them 
more interactive 
->used to modify the content  of forms, change images, open new windows and write dynamic page content.
->used with css to make DHTML(Dynamic hperText makeUp language)
->this allows you to make parts of your web pages appear or disappear or move around on the page.
->It only execte on the pages  that are on your browser  window at any set time.
->When the user stop viewing that page  , any script that were runnning on it are  immediately stopped.
->the only exceptions are cookies or various client side storage API, which can be used by many pages to store 
and pass information  between them, even after the pages have been closed.

->Java is a cient side, interpreted, object oriented, high level scripting language.

Lesson one
----------------
->computer graphics - Coined in 1960
                    -william Fetter
                    -consciously managed and documented technology directed toward communicating 
                    information  accurately and descriptively.
                    -takes things  a step further by allowing  users rapid visual feedback from their actions.
                    -Encompasses anything achieved visually on computers.
                    -Encompasses cycle
                           input->processing->displauy/output
interactive computer graphics 
------------------------------
->Sketchpad - developed in 196os
            - first interactive computer graphics application
            -allow user to create accurate design drawing.
->computer graphics - is  ubiquitous - because modern computing involves some graphics.
                    - encompasses anything achieved visually on computer
                    
   Application of computer Graphics
   ---------------------------------
->Areas that heavy uses are:
                          Educations
                          Computer aided design
                          scientific visualisation
                          Films
                          Games
                          virtual/Augmented reality
 
 Lesson Two
 -----------------
 ->Computer graphics is all about math
 ->We need to understand this maths well in order to be able to understand certain techniques.
 ->
 
 Basic mathematical concepts
 ------------------------------
 ->Points - Given as an order pair(x, y)
            given as ordered triple (x, y,z)
 ->lines  - object that has a start point and end point.
          - in 2d(Xstart, Ystart)(Xend, Yend)
 ->Vectors - Difference between two points
           - has direction and length
           - show how to move from one point to another.
           - important for transformations
           -point coordinate are vector quantities, opposed to a single number  a scalar quantity.
           -Vector between two points:
                    v=p2-p1(x2-x1, y2-y1)
           -Vector length
                     |v| = Squareroot(V2X+V2y)
           - Vector addition
                     V1+V2 =(V1x+v2X, V1y+V2y)
           -Scalar multiplication
                    Multiple each of the components of the vector by the scalar
                    sV=(sVx, sVy)
           -Vector Dot product
                  sums the products of corresponding elements over a pair of vectors
                  Vector a = [a1, a2, a3, ...]
                         b = [b1, b2, b3...]
                         a.b= a1b1+a2b2+a3b3...]
                  Enables us to compute the angle θ between two vectors(if we normalise them first)
                    a.b=|a||b|cosθ
          -We can computer the square of the magnitude of a vector by taking the dot products of that vector and itself:
             ==|a|2 (for this case it is power two)
  -Vector Cross product   
          .taking the cross product(or vector product) of two vectors returns us a vector orthogonal to
          those two vectors.
          
          
          Matrices
          ------------
          -Simple a grid of numbers
          -scalar multiplication - multiply each element by the scalar
                          s*a s*b s*c
                          s*d s*e s*f
         -matrix addition - 
           a b x      
           d e f  + 
           r t r
           
    Lesson 3
    ------------------
    -Graphic pipeline
    -------------------
    computer graphics 2D coordinate  systems
    ----------------------------------------
    -A coordinate system is way of assigning numerical coordinattes to geometric points
    -Graphic objects displayed on the screen on the display coordinate area
    -Cordinate systems number rows from top to bottom, starting from zero and columns from left to right again starting from zero.
    -A digital image is made up of row and columns of pixel.
    -A pixel can be identified by a pair of integers  giving the column and the row number.
    -Dept(precision) - number of color-bits per pixel 
    -resolution of the display - number of row by columns of the rectangular grid.
                               - ranges from  640x480 (VGA)
                               -800x600(SVGA) 
   -Frame buffer - part of graphic memory that store the color values of the pixels.
   -rows and columns number identifies a pixel 
   -A pixel contains infinite number of points.
   
   The problems of mapping number based coordinate systems to pixel based coordinate systems
   -----------------------------------------------------------------------------------------
   -Unless the line is horizontal or vertical, we can't actually draw diagonal lines by coloring pixels
   -A diagonal geometric line will cover some pixels only partially(It is not possible to make part  
   of a pixel black and part of it white.
   -When you try to draw a line with black and white pixel only, the result is a jagged staircase effect.
  
  
  Ant aliasing 
  ---------------
  -Technique used to reduce the jagged or staircase appearance of diagonal lines, text, and other
  shapes that are drawn using the pixel.
  -Its cause is due to a pixel only partly covered by a geometric shape.
  -aliasing can be produced  when representing a high-resolution signal(image at a lowe resolution device)
  -In ant alias the color of the pixel is a blend of the color of the shape and the color of the 
  background.
  -With the degree of blending depending  on th fraction of the pixel that is covered by the geometrics shape.
  -how it is done:
                 each pixel is subdivide(sub-sampled) in a region 
                 each sub-pixel has a color
                 -compute the average color which is assigned to the pixel
                 -the more the number of samples the better the approximatation
                 
   Understanding the graphics subsystems
   -------------------------------------
   Raster image, vector image and rasterisation
   --------------------------------------------
   -A one-pixel-wide line looks good at 100 ppi , but at 400 ppi , 
   a one -pixel-wide line is probably too thin.
   -On a desktop systems, a pixel is usually about one 1/100  inch
   -On  a smart phone, which is usually viewed from a closer distance, the value might be closer  to 1/160
    inch.
   -Raster image - the resulting image on working with pixels.
   -Vector graphics  are computer graphics images that are defined in terms of point on a cartesian plan
   which are connected by lines and curves to form polygons and other shapes.
   -Working with vector images remove the complications that arise when working with raster images.
   -However when all the work is done the vector image has to be converted to a raster image so 
   that it can be displaying on a computer display.
   -This is called rasterisation.
   -input->Central processing unit->graphics processing unit
       
       
   GPU(graphics processing unit)
   ---------------------------------
   -produces the images for the display with its own graphics memory(VRAM)
   -All modern displays are raster-based.
   -A raster is a 2D rectangular grid of pixel(or picture element)
   -A pixel has two properties a color and position
   -color is expressed in RGB(Red-Green-Blue) component- typically 8 bits per component or 24 bits per pixel(or true color)
   
   Frame and refresh rate
   -------------------------------
   -the color value of the pixels are stored in a special part of graphics memory called frame buffer.
   -The GPU writes the color value into the frame buffer.
   -the display reads the color values from the frame buffer row-by-row, from left-to-right, top-to-bottom,  and put each of the value onto the screen.
   -this is called raster-scan
   -The display refresh its screen several dozen times per seconds, typically 60Hz for the LCD monitor.
   and high for the CRT tubes. this is knowns as refresh rate.
   -Frame - is a complete screen image.
   -Tearing - screen showing part of the old frame and part of the new frame.
   -Double buffering 
            -Solution to tearing
            -the GPU uses two of frames buffer  a font buffer and a back buffer.
    -buffer swap/ apage flip - where the GPU signaled to swap the font
                 
   Resolution
   --------------
   -Measured in terms of the number of pixels per inch on the display, a quantity reffered to as PPI(pixel per inch)
   -Each screen trend to have resolution of about 72 PPI.
   -However todays, display can be 200, 300, or even 400 pixel per inch.
   
  Double Buffering and VSync
  -----------------------------
  -the display reads from the front buffer, whhile a write of the next frame to the back buffer takes place.
  -When writing ends the GPU signaled to swap the front and back buffer(known as buffer swap or page flip)
  -Double buffering alone not solve the entire problem,as the buffer swap might occur at an
  inappropriate time. ie while the display is in the middle of the display the old frame.
  -This is resolved via the so called vertical synchronization(VSync)at the end of the raster-scan.
  
  VSync
  ----------
  -When we sifgnal to the GPU to do a buffer swap, the GPU will wait till the next VSync to perform
  the actual swap,
  -After the entire current frame is displayed
  -When the Vsync buffer-swap is enabled, you cannot refresh the display faster than the refresh 
  rate of the display.
   -For the LCD/LED display, the refresh rate is typically locked at  60Hz  or frames  per seconds, or  16.7 
    millisconds for each frame.
   -If your application refresh at a fixed rate, the resultant refresh rate likely to be an
   integral factor of the display's refresh rate ie 1/2, 1/3, 1/4
   
Graphics/ rendering pipeline
-------------------------------
-Graphic pipeline - conceptual model that describes what steps  a graphics system need to
perform  to render a 3D scene to a 2D screen.
-Steps required depends on the software and hardware used and the desired display characteristics.
-Graphics processes generally executes sequentially
-pipelining - series of processing stages which the output from one stage is fed as the input of the next stage.
similar to a factor assembly line or water/oil pipe.
-Three stages of the graphic pipeline:
                         Application stage
                         Geometry stage
                         Rasterization stage.
                         
          Application stage
          ----------------
-Entirely done in software by  the CPU.
-Progrrammer decides what to happens
-Include reading Data from the world geometry database,
-user's input by mice, trackballs, tracjers, or sensing glovers.
-In response to the users input , the application stage change the view or scene.
-Once we have the input, it changes the view or scene.
-Its end results are rendering primitive such as vertices/points, triangles
-Task done here includes:
                    collision detection
                    animation
                    morphing and acceleration techniques
-Collision detection - computational problem of detecting the intersection of two or more objects.
                     - also has applications in other computing fields such as computer 
                       games, computer simulation, robotic and computational physics,
-Animation  - giving life to any object
             It has the power of injecting energy and emotions into the most seemingly inanimated objects
Morphing - is a special effect in motion picture
           animation that changes one image or shape into another through a seamless transition.
           -Metamorphosis from one image to the other consists of fading out the source image and fading 
           in the destination image.
           -Described as an effect that can be used to manipulate still image or to create intersting 
           animation/ still transformation
           
           morphing process
           -----------------
           pre-processing -> coordinate transformation -> cross-dissolve
  
 Geometry stage
 --------------------
 -consist of the majority of the operations
 -mostly works with polygons and the vertices(with vertex pipeline)
 -input from the application stage.
 -model $ view transformation
 -light(shading)
 -projection
 -clipping
 -Its basic idea is to get a 3D representation of scene into 2D representation.
 -Note that at this point in the pipeline, nothing is actually drawn yet
 -We are just doing 'transformation' of 3D primitive and turn them into 2D coordinate that can 
 be fed into the next stage(rasterization) to do the actual drawing.
 
 model and view transformation
 ---------------------------------
 -Its idea is to place objects in a scene, then view it from whatever angle and viewpoint you'd like.
 -Example is the analogy of photograph-
                            -Take the object and place the object in your scene(fixed position)
                            -Place a camera in your scene and take the photo(camera moves about)
                            -take the photo
                analogy of computer graphics
                            -place the object in your scene(model transform) but the camera is always at a fixed position.
                            -move around (transform) the entire world(view transform) so that it aligns to the camera at the distance and 
                            angles that you want, then you take the picture.
                            -calculate lighting(shading) , projection, rasterrize(render) the scene  
-Technically in computer, all the vetices undergoes transformation in the scene to align with the camera
-We do not have the concept of a separate camera view
-the camera is always stationary and everything transforms around the camera
-the end result of view transform is model-view matrix.
-Model view matrix - concatenation of model matrix and view matrix.
-view matrix - defines the Position(location and orientation) of the camera
model  matrix - defines the frame's position of the primitive you are going to draw.

Clipping/ Hidden surfaces removal
 ----------------------------------
 -Clipping - process of removing all objects/parts of objects that is not in th view volume.
 -it is harder than it sound , because some objects/polygons may intersect one of the view plane.
 -Bassically, the way we handle this is by creating vertices from the polygons at the intersection points, and getting 
 and rid of the rest of the polygons that won't be seen.
 

Vertex shading 
-----------------
-Everything needs (light source and objects are all in 3D space)
-meaning we calculate how light should affect any  given vertex on the object.
-done by program called vertex shader.
-shader is a text file with a program pin it and it runs on each vertex in your scene.
-Vertex shader - run on GPU
               - Generally quite fast
               -access memory directly on the video card
               -benefit from parallelization(parallel programming)

Projection
----------------
-since a camera does not capture everything, it is achieved  by using the concept of view frustum
-camera operate on the basis of perspective projection(distant object appear smaller and near objects appear bigger)
-view frustum - also viewing frustum
              - Region of space in the modeled world that may appear on the screen.
              -With it anything inside the volume of the frustum is drawn everything outside is outside is excluded or clipped.
              -in real 3D applications,there are setting for near and far clipping planes.
              
-With perspective projection
                    -all lines appear to meet at some point in the view plane called Vannishing point
                    -proctions map points from one space to another coordinate space of lower dimension, 
                    and hence involve loss of information.
                   -the can be one point, two point, and three point perspective
                               one vanishing point only
                               two for x-direction and y-direction 
                               three for each of the three D axis
                   -The center of projection(COP) :
                   it is the location of the eye on which projection light rays converge.
                   -Projectors are also called a projection vectors - these are rays that 
                   start from the object scene and used to create an image of the object on viewing or view plane.
-With parallel projection
                -formed by extending parallel lines from each vertex on the object until the 
                intersect the plane of the screen.
                The point of intersection is the projection of vertex.
                -makes an attempt to display picture in its true shape and size
                -When projector are perpendicular to view plane then is called orthographic projection.
                -Used by the architects and engineers for creating working drawing of the object
                
model view projection
-------------------------
-In 3D engines, scenes are typically described as objects in three-demensional space.
-With each object comprised of many three-dimesional vertices.
-ultimately, these objects are rendered and displayed on a flat screen
-Rendering a scene is always relative to the camera, and as such , the scene's vertice must also be defined relative to the camera's view.
-When drawing a mesh in a graphic pipeline,  a vertex shadder will process every vertex, expecting 
the vertex's position to be defined in clip space.
-Models view projection is a common series of matrix transformations that can be applied to a vertex defined in model space
-Transforming it into space, which can then be rasterized.
-A vertex position is transformed by a model matrix, then view matrix, followed by a projection matrix, hence the name model view projection (MVP)
-This illustrate an important case of multiple matrix multiplication application.

Model space
---------------
-models, geometry and meshes are some series of vertices defined in model space.
-Model matrix transforms vertices from model space to world space.
-2x2x2 cube centered at (0,0,0)(0,0,0)(0,0,0)can be resized twisted and placed anywhere when  compined with a model matrix.
-A model matrix M is composed from an object's translation transform T, rotation transform R , and scale transform S.
-Multipying a vertex position v by this model matrix transforms the vector into world space
   M=T.R.S
   Vworld=Mvmodel
   
 -View space
 -------------
 -World space is the shared global 3D cartesian coordinate system.
 -world space consist of all renderable objects, ligth, and cameras
 all defined by the model matrix, and they are all relative to the same(0,0,0)(0,0,0)(0,0,0) points
 -It fundamental to understand that all renders are from some camera's perspective
 -All vertices must be defined relatively to the camera.
 -Camera space is the coordinate system defined as the camera (0,0,0)(0,0,0)(0,0,0) facing down its-axis.
 -The camera also has a model matrix defining  its position in world space.
 -The inverse of the camera model matrix is the  matrix and its transformation vertices from the world space to camera space, or view space.
 -in most cases the view matrix and model matrix are pre-multiplied and stored as a model-view matrix.
 -while each object has its own model matrix, practically it means tha the view matrix is shared byall objects on the scene(as they all render from the same camera)
 
 Rasterization stage
 ---------------------
 -Task of  takinf an image described in a vector graphic format(shapes) and converting  it into  
 a raster image(a series of pixels, dots or lines which when displayed together, 
  create the image which was represented via shapes)
  
  -Basically in rasterization
                -Converts the vertex information output by the geometry pipeline 
                into pixel information needed by the video display.
                -Vector data are composed of vertices and path
                -ie the three tyepes of vectores 
                            points 
                            polyline 
                            polygon
               -Vector point - simple coordinate in the space
               Polylines - connect XY coordinates called vertices with paths.
               
Rasterizaion stage
--------------------
screen mapping
--------------
-Mapping the coordinate to the viewport dimension .i.e we have to convert all the geometric coordinate into pixel coordinate
reffered to as rasterization.

Rasterization stage
---------------------
Geometry stage -> rasterization and sampling 
                      |
                  texture mapping
                      |
                  image composition
                      |
                   intensity and color Quantization
                     |
                    framebuffer/display -> computer
 
 
 
 Continuation of graphic pipeline
 --------------------------------------------
 -Input from the world databases
 -collision detection
 -morphing
 -Use of curves ad polygon vertices(implicit curves and parametric curves)
 
 
 Geometry stage -
              -Model $ view transformation
                -in computer graphics the camera position is fixed  but the objrct is
                 transformed relative to camera position.
                -model-view matrix=model matrix+view matrix
                -Lighting (shading) using shader
                -projection(perspective, paralllel, orthographic and frustum)
                -clippong
                
                
                Homogeneous coordinate system
                ------------------------------
         -needed in order to represent a 2D coordintate point into an equivalent 3D point.
         x   x
         y-->y
             1
         -Meaning adding a 3rd  w coordinate point to every 2 d point such that
         -A poiny can therefore have several homegeneous points.
         -Useful in carrying out transformations
         -Every 2D matric of transformation can be written in 3D
         
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

           
           Curves and surfaces 
           -------------------------
           types of curves
           -----------------
           -Curves play an important role in graphics
           -it id an infinitely large set of points.
           -Each point has two neighbores except endpoint.
           -Broadly classified into :
                       implicit 
                       parametric curves
                       
           Introduction to parametrics equations 
           ---------------------------------------
           --A representation of a curve through equations which express the coordinate of the points
            of the curve as functions of a variable, called a parameter.
            -Dealing with curves becomes necessary to express the equation  representing such a curve using the 
            parametrics equations
            -Defines both y and x in terms of a third variables called parameter as:f(t)y=G(t) 
            - t is third parameter.
            -Each value of t defines a point (x, y) = (f(t), g(t)) that we can plot.
            -the collection of points that we get by letting t be all possible value is the graph of the
            parametric equation and is called the parametric curve.
   
   
   
   polynimial curves and surfaces 
   ----------------------------------
   -parenthetic curve equation and its curve 
     x=t"2+t
     y=2t-1
     
     Surfaces:Basic concepts
     ------------------------
     polynomial functions
     -------------------------
     -A polynomial in the variable x is a function that can be written in the form
       f(x)=a,nx"n+a,n-1 ....+ a,2x'2+a1x+a0
     -examples include:
                   p1(x) = 4x+3
                   p2(x) = 3X'3-2X+11
                   
     Elliptic torus
     ----------------
     -A surface of resolution which is generalization of the ring torus.
     -procused by rotating an ellipse having horizontal semi-axis a, vertical semi-axis b, embedded in the 
     xz-plane, z-axis .
     -Given by the parametric equation
             x(u,v) = (c+acos v) cosu
             y(u,v) = (c+ acos v) sin u
             z(u, v) = b sin v
             u,vE[0,2 Pi]
             
   
   
 
Lesson six 
-----------
->GRAPICS USING HTML CANVAS
-----------------------------
->canvas element is part of html five
->allows for dynamic, scripable rendering of 2D shapes and bitmap images.
->consist of a drawable region defined in HTML code height and  width attributes.
->javascript code may access the area though  a full set of drawing functions similar to those
of other common @D APIs , thus allowing dynamically generated    graphics.
->some uses of canvas are building graphics, animations, games and image composition.


Understanding the HTML five DOctype
------------------------------------
->A document type declaration, or DOCTYPE for short is an instruction to the web browser about 
the version of markup language in which a web page is written.
->According the HTML specification  of standard , every  HTML document require a valid document type  declaraion to 
ensure  that your web pages are displayed the way they are intended to be displayed.
->


Canvas Elements Size versus Drawing surface size
---------------------------------------------------
->canvas have two sizes:
                  1)the size of the element(canvas) itself 
                  2)the size of the element's drawing surface.
->Setting the element's width and height attributes sets both of the these sizes;
->CSS attribute affect only the element's size and not the drawing surface.
->By difault, both the canvas element's size and the size of its drawing surface is 3000 screen
pixel wide and one  hundred and fifty screen pixels hight.
->When a canvas element's size does not match  the size of its drawing surface, the borwser scales the
drawing surface to fit the element (which may result in surprising and unwanted effects.




Understanding the Canvas coordinates
---------------------------------------
->The canvas is a two-dimensional rectangular area.
->the coordinate of the top-left corner of the canvas are(0,0) which is known as the origin,
->The coordinate of the  bottom-right corner are(canvas width, canvas height)


Using Javascript to Access the canvas attributes
----------------------------------------------------
display and reset the canvas drawing dimension
------------------------------------------------
 <!DOCTYPE HTML>
 <html>
 <head>
 <style>
 #mycanvas{border:3px solid red;}
 </style>
 </head>
 <body>
 <canvas id ="mycanvas" width="100" height="100"></canvas>
 <script>
 var canvas =document.getElementById("mycanvas");
 //displaying the width and the height
 alert(canvas.width);
 alert(canvas.height);
 //increasing the width and height
 canvas.width=200;
 canvas.height=300;
 </script>
 </body>
 </html>




BASIC TRANSFORMATIONS
----------------------
->SVG element can be transformed by:
                            scaling
                            translating
                            screwing
                            rotating
->SVG uses the transformation attributes thaat defines a list of transformation definitiona that are applied to an element and the element's children.
-> the element in the transmformed list are separated by whitespace and / or commas.
and applied from right to left.

Translation: the translate() methods
-------------------------------------
->A translation moves all the points of an element in the same direction and by the same amount.










CAT 1 Revision Questions
---------------------------
Computer graphics is Ubiquitous. What what do you understand by his statement?
Select one:
a. Computer graphics encompasses anything achieved visually on computers and it is applicable in a few or all disciplines in modern day life
b. Computer graphics encompasses anything achieved visually on computers and it is applicable in quite a number of areas in modern day life
c. Computer graphics encompasses anything achieved visually on computers and it is applicable in almost all disciplines in modern day life
d. Computer graphics encompasses a number of computing areas achieved visually on computers and in many disciplines in modern day life 
The correct answer is: Computer graphics encompasses anything achieved visually on computers and it is applicable in almost all disciplines in modern day life


Graphics pipeline consist of four stages, namely Modeling stage, Application Stage,Geometry Stage and Rasterization Stage. True/False?
Select one:
a. false
b. true 
The correct answer is: false


The statements below concerns an identity matrix. Which one is incorrect?
Select one:
a. The identity matrix does not affect the elements of any other matrix it is multiplied with
b. The identity matrix has zeroes everywhere except the leading diagonal which is set to 1 
c. The identity matrix is obtained by multiplying any matrix with its corresponding inverse
d. It is used heavily in transforming graphics objects.
The correct answer is: It is used heavily in transforming graphics objects.

You assert that Graphics pipeline consist of four stages, namely Modeling stage, Application Stage,Geometry Stage and Rasterization Stage. Which is the correct sequence of processing of these stages
Select one:
A. Modeling,Application,Geometry,Rasterization 
B. None of these
C. Apploication,Modeling,Geometry,Rasterization
D. Modeling,Geometry,Application,Rasterization
The correct answer is: None of these

Which stage in the graphics pipeline do much of the graphics processing?
The correct answer is: Geometry

Which stage of the graphics pipeline will benefit from a faster computer CPU?
The correct answer is: Application

The statements below describe characteristics of display systems. Which one is incorrect?
Select one:
a. Has a frame buffer which is a memory where the color values of the pixels are stored
b. Has depth (or precision) which is the number of color-bits per pixel 
c. Contains the GPU which writes the color value into the frame buffer among others
d. Contains the pipeline, which refers to a series of processing stages before display
e. Has refresh rate which the rate at which the display refreshes its screen per second
f. Has resolution which is the the number of rows by columns of the rectangular display grid
The correct answer is: Contains the pipeline, which refers to a series of processing stages before display




Each of the stages gets input data and gives an output. In which form is the input received by the rasterization engine?
Select one:
A. Meddelling Data 
B. Vector
C. Jaggies
D. Raster
The correct answer is: Vector


What is aliasing as applied in computer graphics
Select one:
a. This distortion artifacts produced when representing a high-resolution signal at a lower resolution
b. This distortion artifacts produced when representing a low-resolution signal at a higher resolution 
c. This distortion artifacts produced when representing a high-resolution signal at a high resolution
d. The task of removing aliases in an image and making it photorealistic
The correct answer is: This distortion artifacts produced when representing a low-resolution signal at a higher resolution


What is opacity in computer graphics and which property is used to set it?
Select one:
a. Opacity is a measure of the transparency/Opaqueness of an image. Its value ranges from 0 to 1 and can be set using the globalOpacity property.
b. Opacity is a measure of the transparency/Opaqueness of an image. It has a value ranging from 0 to 100 and can be set using the globalAlpha property. 
c. Opacity is a measure of the transparency/Opaqueness of an image. It has a value ranging from 0 to 1 and can be set using the globalAlpha property.
d. Opacity is a measure of the transparency/Opaqueness of an image. It has a value of either 0 or 1 and can be set using the globalOpacity property.
The correct answer is: Opacity is a measure of the transparency/Opaqueness of an image. It has a value ranging from 0 to 1 and can be set using the globalAlpha property.



What is Shading in computer graphics?
Select one:
a. Shading refers to the process of altering the color of an object in the 3D scene using phong techniques
b. Shading refers to the process of altering the color of an object in the 3D scene using flat shading methods 
c. Refers to the process of altering the color of an object in the 3D scene, based on its angle to lights and its distance from lights source to create a photorealistic effect
d. Shading refers to the process of altering the color of an object by use of the shading tool in graphic application
The correct answer is: Refers to the process of altering the color of an object in the 3D scene, based on its angle to lights and
its distance from lights source to create a photorealistic effect


What is specular highlight as used in computer graphics?
Select one:
a. It is the bright spot of light that appears on shiny objects when illuminated light is perfectly reflected in a mirror-like way from the light source to the viewer Correct
b. A bright spot on an object obtained by use of flat shading and lighting techniques .
c. A bright spot on an object obtained by use of Goround shading and lighting techniques .
d. A bright spot on an object obtained by use of diffuse reflection and the law of reflection .
The correct answer is: It is the bright spot of light that appears on shiny objects when illuminated light is perfectly
reflected in a mirror-like way from the light source to the viewer


Texture mapping is one of the important image processing in computer graphics. What is its significance?
Select one:
a. It enables the use of a 3D image file that can be applied to the surface of a 3D model to add color, texture, or other surface detail like glossiness, reflectivity, or transparency. Incorrect
b. This is the use of a 3D image file that can be applied to the surface of a2D model to add color, texture, or other surface detail like glossiness, reflectivity, or transparency.
c. It is used in the  task of combining two or more images to create a more complicated image
d. It enables the use of a 2D image file that can be applied to the surface of a 3D model to add color, texture, or other surface detail like glossiness, reflectivity, or transparency.
The correct answer is: It enables the use of a 2D image file that can be applied to the surface of a 3D model to add color, texture, or other 
surface detail like glossiness, reflectivity, or transparency.


What is the result of cross product of any two vectors?
Select one:
a. It is a scaler product that is the magnitude of the two vectors Incorrect
b. It is a vector product which is a projection of one of the vector to the other
c. It is a vector parallel to the two vectors.
d. It is a vector othoganl to the two vectors.
The correct answer is: It is a vector othoganl to the two vectors.




Which graphic processing task that benefits from vector cross product?
The correct answer is: Shading


Which of the pipe line stage requires use of matrices?
Select one:
a. Geometry Stage Correct
b. Transformation stage
c. Application Stage,
d. Rasterization Stage.
The correct answer is: Geometry Stage


Which of the pipe line stage requires use of vectors?
Select one:
a. Application Stage,
b. Geometry Stage
c. Transformation stage 
d. Rasterization Stage.
The correct answer is: Geometry Stage



Which of the statement below is correct about a Pixel?
Select one:
a. A pixel has three properties a color, a position and is raster-based.
b. A pixel has two properties a color and a grid position expressed in (x,y) coordinates..
c. A pixel has two properties a color and a raster position.
d. A pixel has two properties a color and a vector.
The correct answer is: A pixel has two properties a color and a grid position expressed in (x,y) coordinates..



Which pipe line stage brings about a more realistic graphic image?
Select one:
a. Display stage
b. Application Stage,
c. Geometry Stage
d. Rasterization Stage. 
The correct answer is: Geometry Stage

You are given the point P1 (7, 10) and P2(10,7). What is the vector between them?
Select one:
a. (17,17)
b. (-3,3)
c. (-3,-3)
d. (3,-3) 
The correct answer is: (3,-3)



You are given the points P1 (7, 10) and P2(10,7). What is the magnitude of the vector between them?
The correct answer is: 3


You are given the point P1 (7, 10) and P2(10,7). What is the is the projection of vector P1 on P2?
The correct answer is: 140


You want to map the vector P1 (7, 10) to a 3D coordinate system. What do you do?
The correct answer is: homogeneous



You are given the vector (-4,-3) What is its magnitude?
Select one:
a. 7
b. -7 
c. 5
d. -5
The correct answer is: 5



Give any three characteristics of light that affect the quality of a graphic in computer graphic.
The correct answer is: Reflection


In computer graphics which projection results in less loss of image details?
The correct answer is: Parallel


You are given the vector A(4,3) and B(3,4) What is the projection of B on A?
Select one:
a. 24
b. 25
c. 84.6 
d. 0.094117647
The correct answer is: 25




The following factors contribute to the quality of a computer graphic. Which ones does not.?

CPU speed

Angle of reflection

Angle of refraction

Distance of the source of light

The size of the frustum

Pixels levels of the camera

The objects material
Select one:
A. i,v,vi,
B. None of the above
C. i,v,vi,vii Incorrect
D. i,iii,v,vi
The correct answer is: i,iii,v,vi




You are given the matrix M ({4 5 6}{7 6 5}{3 2 1}). Give the transpose of matirx M.
The correct answer is: ({4 7 3}{5 6 2}{6 5 1})


In computer graphics which projection gives a real camera like image.
The correct answer is: Perspective


Lesson Seven
-------------
Graphics Using HTML five Canvas
-----------------------------------
->Canvas elements - is part of HTML
                  - allows dynamic, scriptable rendering of 2D shapes and bitmap images
->Canvas -consist of a drawable region defined in HTML code with height and width attributes
          -used  to build graphs, animations, games and image composition.
->javascript code may access the area through a full set of drawing functions
similar to those of other common 2D APIs, thus allowing for dynamucally generated graphics.



understanding the HTML five doctype
-------------------------------------
->document type declaration(DOCTYPE) - is an instruction to the web browser about the version
  of markup language in which a web page is written.
                                     - the first thing defined in an HTML document
                                     -Not an HTML tage.
  ->insure that web pages are displayed the way they are intended to be displayed.
  ->

Canvas  Element size versus Drawing surface Size
---------------------------------------------------
->canvas has two sizes:
        1.the size of the element(canvas) itself 
        2.the size of the element's drawing surface
 ->Setting the element width and height attributes sets both of these sizes.
 ->Css attributes affect only the element's size and not the drawing surface.
 ->Both by default are 300 screen pixels wide and 10 screen pixel hight.
 ->Drawing surface remains unchanged at default value if css is used to set the canvas element and draw sixe
 ->unwanted effect when a canvas element's size does not match the size of its  drawing surface, the browser scales the drawing surface to fit the element.
 


Understanding the canvas coordinate
--------------------------------------
->the canvas is a two-dimensional rectangular area.
->the coordinate of the top-left corner of the canvas are(0,0) which is known as origin,
  the coordinate of the bottom-right corner are(canvas width, canvas height)


Canvas color gradients
---------------------------
->lineargradients
->Radialgradiant
->working with images in Canvas
->Canvas pattern
->Canvas text
->Canvas shadows GlobalApha
->Canvas Clipping

General discussions
----------------------
->Gradient - in the context of the canvas consist of continuously smooth color transitions
  along a vector from one color to another, 
  possibly following by additional transitions along the same vector to other colors.
           -Used anywhere in images, normally as a background element.
           -allow designer to expore new opportunities to provide fresh, clean designs for audience.
           -They are of two types:
                         Linear gradient
                         Radial Gradient
           -Transitions in linear gradients occurs along a straigh line  between two points inclined to an angle or a direction.
           -Created with the use of 
            createLinearGradient() method.
           -Defined by imaginery  line which defines the direction of the gradient.
           -Once created we can insert  color using the 
            addColorstop() method
           -It accepts as arguments a floating point value between 0.0 and 1.0.
           -
                         <script>
                         var canvas=document.getElementById('myCanvas');
                         var context=canvas.getContext('2d');
                         //a rectangle covering entire canvas
                         context.rect(0,0, canvas.width, canvas.height);
                         //add linear gradient(rectangular region)
                         var grd = context.createLinearGradient(0,0,canvas.width, canvas.height);
                         //light blue
                         grd.addColorStop(0, '#8ED3FF');
                         //dark blue
                         grd.addColorStop(1, #004CB3');
                         //use the gradient
                         context.fillstyle=grd;
                         context.fill();
                         </script>


Specifying  a color stop with an RGBa() color value which includes degrees of transparency
---------------------------------------------------------------------------------------
                    <script>
                    var canvas=document.getElementById('DemoCanvas');
                    if (canvas.getContext)
                    {
                    vr ctx = canvas.getContext("2d");
                    
                    var gadient1 = ctx.createLinearGradient(0,0, 50, 0);
                    gradient1.addColorStop(0,'red');
                    gradient1.addColorStop(1, 'rgba(0,0,244,0.4)');
                    ctx.fillStyle = gradient1;
                    ctx.fillRect(0,0,75, 75);
                    
                    var gradient2=ctx.createLinearGradient(0, 0, 50, 0);
                    gradient2.addColorStrop(0, 'red');
                    gradient2.addColorStop(1, 'rgba(0,0,255,0.5)');
                    ctx.fillStyle = gradient2;
                    ctx.fillRect(75, 0, 75, 75);
                    
                    var gradient3= ctx.createLinearGradient(150, 0, 200, 50);
                    gradient3.addColorStop(0, 'red');
                    gradient3.addColorStop(1, 'rgba(0,0,255, 0.5)');
                    ctx.fillStyle= gradient3;
                    ctx.fillRect(150, 0, 75, 75);
                    
                    var gradient4= ctx.createLinearGradient(275, 50, 225, 0);
                    gradient4.addColorStop(0, 'red');
                    gradient4.addColorStop(1, 'rgba(0, 0, 255, 0.5)');
                    ctx.fillStyle = gradient4;
                    ctx.fillRect(255, 0, 75, 75);
                    }
                    </stript>
                

Generating s rainbow colours
--------------------------------
               context.rect(0,0,canvas,width, canvas,height);
               var grd = context.createLinearGradient(0,0,canvas.width, canvas.height);
               grd.addColorStop(0.14, '#FF0000');
               grd.addColorStop(0.28, '#FF7F00');
               grd.addColorStop(0.42, '#FFFF00');
               grd.addColorStop(0.57, '#00FF00');
               grd.addColorStop(0.71, '#0000FF');
               grd.addColorStop(0.85, '#4B0082');
               grd.addColorStop(1.0,'#8F00FF');
               context.fillStyle = grd;
               context.fill();
               
               
         
         
         Radial Gradient
         ---------------------
 ->Define a color change along a clone(a three-dimensional geomeric shape) beween two circles.
 ->created by 
          createRadialGradient() method  
          and passing in two circles and also providing source destination circle radius
          
          
          <sctipt>
          var canvas = document.getElementById('myCanvas');
          var context = canvas.getContext('2d');
          context.rect(0,0, canvas,width, canvas.height);
          
          //Create radial gradient
          var grd = contex.createRadialGradient(238,50, 10, 238, 50, 300);
          
          //light blue
          grd.addColorStop(0, '#8ED7FF');
          
          //dark blue
          grd.addColorStop(1, '#004CB3');
          
          context.fillSyle = grd;
          context.fill();
          context.srokeStyle = '#0000ff';
          context.lineCap = 'square';
          context.stoke();
          </script>
          
->Canvas radial gradient are defined with two imaginary circles.
->a starting circle and an ending circle, in which the gradient(transition) start
with  the start circle and moves towards the end circle.
               
               
      
      
      Canvas Pattern
      --------------------
->pattern - used to fill  or stroke  an object using a pre-defined graphic object
            which can be replaced (tiled) at fixed intervals in x and y to cover the area to be painted.
          -consist of an image source - JPG, GIF, SVG, or the currently playing frame of a video.
          -Created by 
                  createPattern() method, 
                  passing in the image object and a repeat parameters.
                  (returns a pattern object)
                  
                  
                  <body>
                  <canvas id="myCanvas" width="578" height="200"></canvas>
                  <script>
                  var canvas=document.getElementById('mycanvas');
                  var context=canvas.getContext('2d');
                  var imageObj=new image();
                  imageObj.onload=function(){
                  var pattern=context.createPattern(imageObj,'repeat');
                  context.rect(0,0,canvas.width, canvas.height);
                  context.fillStyle=pattern;//set fillStyle property to the pattern object
                  context.fill();//fill the shape using fill()
                  };
                  imageObj.scr='myimage.png';
                  </script>
                  </body>
                  </html>
                  
                 
                  
                  Loding two images-pattern making them into patterns tha are used to stroke a line and fill a rectangle
                  ------------------------------------------------------------------------------------------------------
                  
                                 <canvas id="mycanvas" width="500" hheight="500"></canvas>
                                 <script>
                                 var canvas=document.getElementById("myCanvas");
                                 if (canvas.getContext){
                                 var ctx=canvas.getContext("2d");
                                 //create new image object to use as pattern 
                                 var image1 = new Image();
                                 var image2 = new Image();
                                 
                                 image1.src = 'pattern1.png';
                                 image2.src = 'pattern3.png';
                                 
                                 var pat1 = ctx.createPattern(image1, "repeat");
                                 var pat2 = ctx.createPattern(image2, "repeat");
                                 ctx.lineWidth = 4;
                                 
                                 //stroke line and fill rect with block pattern 
                                 ctx.beginPath();
                                 ctx.moveTop(50, 10);
                                 ctx.lineTo(150, 10);
                                 ctx.strokeStyle = pat1;
                                 ctx.stroke();
                                 ctx.fillStyle = pat1;
                                 ctx.fillRect(50, 20, 100, 150);
                                 
                                 //stroke line and fill rect with cork pattern
                                 ctx.beginPath();
                                 ctx.moveTo(200, 10);
                                 ctx.lineTo(300, 10);
                                 ctx.strokeStyle = pat2;
                                 ctx.stroke();
                                 ctx.fillStyle = pat2;
                                 ctx.fillRect(200, 20, 100, 150);
                                 }
                                 </script>
                                 
                                 
                                 
                               Working with canvas image
                               ------------------------------
 ->we can draw an image on canvas using 
          drawImage() method
 ->The method requires an image object  and destination point
 ->The destination point defines the top left corner of the image  relative to the top left corner.
  of the canvas.
  ->With the canvas image, you can 
                  set the image size
                  crop an image
 
 
       //drawImage() method require an image object
       //create an image and wait for it to load before instantiating drawImage()
       //accomplish by using the onload property of the image object
       <script>
       var canvas=document.getElementBy
                                 
                                 
     
     
     Chapter
     =========
     Scalable vector graphics
     ------------------------
     SVG marker element
     --------------
     -marks the start, mid and end of a line or path.
     -created using <marker> element
     -<marker> element can be nested inside a <defs> element.
     -<defs> elements normally holds a set of reusable definitions 
      for the SVG image.
      
     
     
                                 
                  
               
               
               
               
               
