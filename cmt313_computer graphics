INTRODUCTION
-------------
->programming language that can be included on out  pages to make them 
more interactive 
->used to modify the content  of forms, change images, open new windows and write dynamic page content.
->used with css to make DHTML(Dynamic hperText makeUp language)
->this allows you to make parts of your web paes ppear or disappear or move around on the page.
->It only execte on the pages  that are on your browser  window at any set time.
->When the user stop viewing that page  , any script that were runnning on it are  immediately stopped.
->the only exceptions are cookies or various client side storage API, which can be used by many pages to store 
and pass information  between them, even after the pages have been closed.

->Java is a cient side, interpreted, object oriented, high level scripting language.

Lesson one
----------------
->computer graphics - Coined in 1960
                    -william Fetter
                    -consciously managed and documented technology directed toward communicating 
                    information  accurately and descriptively.
                    -takes things  a step further by allowing  users rapid visual feedback from their actions.
                    -Encompasses anything achieved visually on computers.
                    -Encompasses cycle
                           input->processing->displau/output
interactive computer graphics 
------------------------------
->Sketchpad - developed in 196os
            - first interactive computer graphics application
            -allow user to create accurate design drawing.
->computer graphics - is  ubiquitous - because modern computing involves some graphics.
                    - encompasses anything achieved visually on computer
                    
   Application of computer Graphics
   ---------------------------------
->Areas that heavy uses are:
                          Educations
                          Computer aided design
                          scientific visualisation
                          Films
                          Games
                          virtual/Augmented reality
 
 Lesson Two
 -----------------
 ->Computer graphics is all about math
 ->We need to understand this maths well in order to be able to understand certain techniques.
 ->
 
 Basic mathematical concepts
 ------------------------------
 ->Points - Given as an order pair(x, y)
            given as ordered triple (x, y,z)
 ->lines  - object that has a start point and end point.
          - in 2d(Xstart, Ystart)(Xend, Yend)
 ->Vectors - Difference between two points
           - has direction and length
           - show how to move from one point to another.
           - important for transformations
           -point coordinate are vector quantities, opposed to a single number  a scalar quantity.
           -Vector between two points:
                    v=p2-p1(x2-x1, y2-y1)
           -Vector length
                     |v| = Squareroot(V2X+V2y)
           - Vector addition
                     V1+V2 =(V1x+v2X, V1y+V2y)
           -Scalar multiplication
                    Multiple each of the components of the vector by the scalar
                    sV=(sVx, sVy)
           -Vector Dot product
                  sums the products of corresponding elements over a pair of vectors
                  Vector a = [a1, a2, a3, ...]
                         b = [b1, b2, b3...]
                         a.b= a1b1+a2b2+a3b3...]
                  Enables us to compute the angle θ between two vectors(if we normalise them first)
                    a.b=|a||b|cosθ
          -We can computer the square of the magnitude of a vector by taking the dot products of that vector and itself:
             ==|a|2 (for this case it is power two)
  -Vector Cross product   
          .taking the cross product(or vector product) of two vectors returns us a vector orthogonal to
          those two vectors.
          
          
          Matrices
          ------------
          -Simple a grid of numbers
          -scalar multiplication - multiply each element by the scalar
                          s*a s*b s*c
                          s*d s*e s*f
         -matrix addition - 
           a b x      
           d e f  + 
           r t r
           
    Lesson 3
    ------------------
    -Graphic pipeline
    -------------------
    computer graphics 2D coordinate  systems
    ----------------------------------------
    -A coordinate system is way of assigning numerical coordinattes to geometric points
    -Graphic objects displayed on the screen on the display coordinate area
    -Cordinate systems number rows from top to bottom, starting from zero and columns from left to right again starting from zero.
    -A digital image is made up of row and columns of pixel.
    -A pixel can be identified by a pair of integers  giving the column and the row number.
    -Dept(precision) - number of color-bits per pixel 
    -resolution of the display - number of row by columns of the rectangular grid.
                               - ranges from  640x480 (VGA)
                               -800x600(SVGA) 
   -Frame buffer - part of graphic memory that store the color values of the pixels.
   -rows and columns number identifies a pixel 
   -A pixel contains infinite number of points.
   
   The problems of mapping number based coordinate systems to pixel based coordinate systems
   -----------------------------------------------------------------------------------------
   -Unless the line is horizontal or vertical, we can't actually draw diagonal lines by coloring pixels
   -A diagonal geometric line will cover some pixels only partially(It is not possible to make part  
   of a pixel black and part of it white.
   -When you try to draw a line with black and white pixel only, the result is a jagged staircase effect.
  
  
  Ant aliasing 
  ---------------
  -Technique used to reduce the jagged or staircase appearance of diagonal lines, text, and other
  shapes that are drawn using the pixel.
  -Its cause is due to a pixel only partly covered by a geometric shape.
  -aliasing can be produced  when representing a high-resolution signal(image at a lowe resolution device)
  -In ant alias the color of the pixel is a blend of the color of the shape and the color of the 
  background.
  -With the degree of blending depending  on th fraction of the pixel that is covered by the geometrics shape.
  -how it is done:
                 each pixel is subdivide(sub-sampled) in n region 
                 each sub-pixel has a color
                 -compute the average color which is assigned to the pixel
                 -the more the number of samplrs the better the approximatation
                 
   Understanding the graphics subsystems
   -------------------------------------
   Raster image, vector image and rasterisation
   --------------------------------------------
   -A one-pixel-wide line looks good at 100 ppi , but at 400 ppi , 
   a one -pixel-wide line is probably too thin.
   -On a desktop systems, a pixel is usually about one 1/100  inch
   -On  a smart phone, which is usually viewed from a closer distance, the value might be closer  to 1/160
    inch.
   -Raster image - the resulting image on working with pixels.
   -Vector graphics  are computer graphics images that are defined in terms of pointd on a cartesian plan
   which are connected by lines and curves to form polygons and other shapes.
   -Working with vector images remove the complications that arise when working with raster images.
   -However when all the work is done the vector image has to be converted to a raster image so 
   that it can be displaying on a computer display.
   -This is called rasterisation.
   -input->Central processing unit->graphics processing unit
       
       
   GPU(graphics processing unit)
   ---------------------------------
   -produces the images for the display with its own graphics memory(VRAM)
   -All modern displays are raster-based.
   -A raster is a 2D rectangular grid of pixel(or picture element)
   -A pixel has two properties a color and position
   -color is expressed in RGB(Red-Green-Blue) component- typically 8 bits per component or 24 bits per pixel(or true color)
   
   Frame and refresh rate
   -------------------------------
   -the color value of the pixels are stored in a special part of graphics memory called frame buffer.
   -The GPU writes the color value into the frame buffer.
   -the display reads the color values from the frame buffer row-by-row, from left-to-right, top-to-bottom,  and put each of the value onto the screen.
   -this is called raster-scan
   -The display refresh its screen several dozen times per seconds, typically 60Hz for the LCD monitor.
   and high for the CRT tubes. this is knowns as refresh rate.
   -Frame - is a complete screen image.
   -Tearing - screen showing part of the old frame and part of the new frame.
   -Double buffering 
            -Solution to tearing
            -the GPU uses two of frames buffer  a font buffer and a back buffer.
    -buffer swap/ apage flip - where the GPU signaled to swap the font
                 
   Resolution
   --------------
   -Measured in terms of the number of pixels per inch on the display, a quantity reffered to as PPI(pixel per inch)
   -Each screen trend to have resolution of about 72 PPI.
   -However todays, display can be 200, 300, or even 400 pixel per inch.
   
                    
Lesson six 
-----------
->GRAPICS USING HTML CANVAS
-----------------------------
->canvas element is part of html five
->allows for dynamic, scripable rendering of 2D shapes and bitmap images.
->consist of a drawable region defined in HTML code height and  width attributes.
->javascript code may access the area though  a full set of drawing functions similar to those
of other common @D APIs , thus allowing dynamically generated    graphics.
->some uses of canvas are building graphics, animations, games and image composition.


Understanding the HTML five DOctype
------------------------------------
->A document type declaration, or DOCTYPE for short is an instruction to the web browser about 
the version of markup language in which a web page is written.
->According the HTML specification  of standard , every  HTML document require a valid document type  declaraion to 
ensure  that your web pages are displayed the way they are intended to be displayed.
->


Canvas Elements Size versus Drawing surface size
---------------------------------------------------
->canvas have two sizes:
                  1)the size of the element(canvas) itself 
                  2)the size of the element's drawing surface.
->Setting the element's width and height attributes sets both of the these sizes;
->CSS attribute affect only the element's size and not the drawing surface.
->By difault, both the canvas element's size and the size of its drawing surface is 3000 screen
pixel wide and one  hundred and fifty screen pixels hight.
->When a canvas element's size does not match  the size of its drawing surface, the borwser scales the
drawing surface to fit the element (which may result in surprising and unwanted effects.




Understanding the Canvas coordinates
---------------------------------------
->The canvas is a two-dimensional rectangular area.
->the coordinate of the top-left corner of the canvas are(0,0) which is known as the origin,
->The coordinate of the  bottom-right corner are(canvas width, canvas height)


Using Javascript to Access the canvas attributes
----------------------------------------------------
display and reset the canvas drawing dimension
------------------------------------------------
 <!DOCTYPE HTML>
 <html>
 <head>
 <style>
 #mycanvas{border:3px solid red;}
 </style>
 </head>
 <body>
 <canvas id ="mycanvas" width="100" height="100"></canvas>
 <script>
 var canvas =document.getElementById("mycanvas");
 //displaying the width and the height
 alert(canvas.width);
 alert(canvas.height);
 //increasing the width and height
 canvas.width=200;
 canvas.height=300;


CAT 1 Revision Questions
---------------------------
Computer graphics is Ubiquitous. What what do you understand by his statement?
Select one:
a. Computer graphics encompasses anything achieved visually on computers and it is applicable in a few or all disciplines in modern day life
b. Computer graphics encompasses anything achieved visually on computers and it is applicable in quite a number of areas in modern day life
c. Computer graphics encompasses anything achieved visually on computers and it is applicable in almost all disciplines in modern day life
d. Computer graphics encompasses a number of computing areas achieved visually on computers and in many disciplines in modern day life 
The correct answer is: Computer graphics encompasses anything achieved visually on computers and it is applicable in almost all disciplines in modern day life


Graphics pipeline consist of four stages, namely Modeling stage, Application Stage,Geometry Stage and Rasterization Stage. True/False?
Select one:
a. false
b. true 
The correct answer is: false


The statements below concerns an identity matrix. Which one is incorrect?
Select one:
a. The identity matrix does not affect the elements of any other matrix it is multiplied with
b. The identity matrix has zeroes everywhere except the leading diagonal which is set to 1 
c. The identity matrix is obtained by multiplying any matrix with its corresponding inverse
d. It is used heavily in transforming graphics objects.
The correct answer is: It is used heavily in transforming graphics objects.

You assert that Graphics pipeline consist of four stages, namely Modeling stage, Application Stage,Geometry Stage and Rasterization Stage. Which is the correct sequence of processing of these stages
Select one:
A. Modeling,Application,Geometry,Rasterization 
B. None of these
C. Apploication,Modeling,Geometry,Rasterization
D. Modeling,Geometry,Application,Rasterization
The correct answer is: None of these

Which stage in the graphics pipeline do much of the graphics processing?
The correct answer is: Geometry

Which stage of the graphics pipeline will benefit from a faster computer CPU?
The correct answer is: Application

The statements below describe characteristics of display systems. Which one is incorrect?
Select one:
a. Has a frame buffer which is a memory where the color values of the pixels are stored
b. Has depth (or precision) which is the number of color-bits per pixel 
c. Contains the GPU which writes the color value into the frame buffer among others
d. Contains the pipeline, which refers to a series of processing stages before display
e. Has refresh rate which the rate at which the display refreshes its screen per second
f. Has resolution which is the the number of rows by columns of the rectangular display grid
The correct answer is: Contains the pipeline, which refers to a series of processing stages before display




Each of the stages gets input data and gives an output. In which form is the input received by the rasterization engine?
Select one:
A. Meddelling Data 
B. Vector
C. Jaggies
D. Raster
The correct answer is: Vector


What is aliasing as applied in computer graphics
Select one:
a. This distortion artifacts produced when representing a high-resolution signal at a lower resolution
b. This distortion artifacts produced when representing a low-resolution signal at a higher resolution 
c. This distortion artifacts produced when representing a high-resolution signal at a high resolution
d. The task of removing aliases in an image and making it photorealistic
The correct answer is: This distortion artifacts produced when representing a low-resolution signal at a higher resolution


What is opacity in computer graphics and which property is used to set it?
Select one:
a. Opacity is a measure of the transparency/Opaqueness of an image. Its value ranges from 0 to 1 and can be set using the globalOpacity property.
b. Opacity is a measure of the transparency/Opaqueness of an image. It has a value ranging from 0 to 100 and can be set using the globalAlpha property. 
c. Opacity is a measure of the transparency/Opaqueness of an image. It has a value ranging from 0 to 1 and can be set using the globalAlpha property.
d. Opacity is a measure of the transparency/Opaqueness of an image. It has a value of either 0 or 1 and can be set using the globalOpacity property.
The correct answer is: Opacity is a measure of the transparency/Opaqueness of an image. It has a value ranging from 0 to 1 and can be set using the globalAlpha property.



What is Shading in computer graphics?
Select one:
a. Shading refers to the process of altering the color of an object in the 3D scene using phong techniques
b. Shading refers to the process of altering the color of an object in the 3D scene using flat shading methods 
c. Refers to the process of altering the color of an object in the 3D scene, based on its angle to lights and its distance from lights source to create a photorealistic effect
d. Shading refers to the process of altering the color of an object by use of the shading tool in graphic application
The correct answer is: Refers to the process of altering the color of an object in the 3D scene, based on its angle to lights and
its distance from lights source to create a photorealistic effect


What is specular highlight as used in computer graphics?
Select one:
a. It is the bright spot of light that appears on shiny objects when illuminated light is perfectly reflected in a mirror-like way from the light source to the viewer Correct
b. A bright spot on an object obtained by use of flat shading and lighting techniques .
c. A bright spot on an object obtained by use of Goround shading and lighting techniques .
d. A bright spot on an object obtained by use of diffuse reflection and the law of reflection .
The correct answer is: It is the bright spot of light that appears on shiny objects when illuminated light is perfectly
reflected in a mirror-like way from the light source to the viewer


Texture mapping is one of the important image processing in computer graphics. What is its significance?
Select one:
a. It enables the use of a 3D image file that can be applied to the surface of a 3D model to add color, texture, or other surface detail like glossiness, reflectivity, or transparency. Incorrect
b. This is the use of a 3D image file that can be applied to the surface of a2D model to add color, texture, or other surface detail like glossiness, reflectivity, or transparency.
c. It is used in the  task of combining two or more images to create a more complicated image
d. It enables the use of a 2D image file that can be applied to the surface of a 3D model to add color, texture, or other surface detail like glossiness, reflectivity, or transparency.
The correct answer is: It enables the use of a 2D image file that can be applied to the surface of a 3D model to add color, texture, or other 
surface detail like glossiness, reflectivity, or transparency.


What is the result of cross product of any two vectors?
Select one:
a. It is a scaler product that is the magnitude of the two vectors Incorrect
b. It is a vector product which is a projection of one of the vector to the other
c. It is a vector parallel to the two vectors.
d. It is a vector othoganl to the two vectors.
The correct answer is: It is a vector othoganl to the two vectors.




Which graphic processing task that benefits from vector cross product?
The correct answer is: Shading


Which of the pipe line stage requires use of matrices?
Select one:
a. Geometry Stage Correct
b. Transformation stage
c. Application Stage,
d. Rasterization Stage.
The correct answer is: Geometry Stage


Which of the pipe line stage requires use of vectors?
Select one:
a. Application Stage,
b. Geometry Stage
c. Transformation stage 
d. Rasterization Stage.
The correct answer is: Geometry Stage



Which of the statement below is correct about a Pixel?
Select one:
a. A pixel has three properties a color, a position and is raster-based.
b. A pixel has two properties a color and a grid position expressed in (x,y) coordinates..
c. A pixel has two properties a color and a raster position.
d. A pixel has two properties a color and a vector.
The correct answer is: A pixel has two properties a color and a grid position expressed in (x,y) coordinates..



Which pipe line stage brings about a more realistic graphic image?
Select one:
a. Display stage
b. Application Stage,
c. Geometry Stage
d. Rasterization Stage. 
The correct answer is: Geometry Stage

You are given the point P1 (7, 10) and P2(10,7). What is the vector between them?
Select one:
a. (17,17)
b. (-3,3)
c. (-3,-3)
d. (3,-3) 
The correct answer is: (3,-3)



You are given the points P1 (7, 10) and P2(10,7). What is the magnitude of the vector between them?
The correct answer is: 3


You are given the point P1 (7, 10) and P2(10,7). What is the is the projection of vector P1 on P2?
The correct answer is: 140


You want to map the vector P1 (7, 10) to a 3D coordinate system. What do you do?
The correct answer is: homogeneous



You are given the vector (-4,-3) What is its magnitude?
Select one:
a. 7
b. -7 
c. 5
d. -5
The correct answer is: 5



Give any three characteristics of light that affect the quality of a graphic in computer graphic.
The correct answer is: Reflection


In computer graphics which projection results in less loss of image details?
The correct answer is: Parallel


You are given the vector A(4,3) and B(3,4) What is the projection of B on A?
Select one:
a. 24
b. 25
c. 84.6 
d. 0.094117647
The correct answer is: 25




The following factors contribute to the quality of a computer graphic. Which ones does not.?

CPU speed

Angle of reflection

Angle of refraction

Distance of the source of light

The size of the frustum

Pixels levels of the camera

The objects material
Select one:
A. i,v,vi,
B. None of the above
C. i,v,vi,vii Incorrect
D. i,iii,v,vi
The correct answer is: i,iii,v,vi




You are given the matrix M ({4 5 6}{7 6 5}{3 2 1}). Give the transpose of matirx M.
The correct answer is: ({4 7 3}{5 6 2}{6 5 1})


In computer graphics which projection gives a real camera like image.
The correct answer is: Perspective


Lesson Seven
-------------
Graphics Using HTML five Canvas
-----------------------------------
->Canvas elements - is part of HTML
                  - allows dynamic, scriptable rendering of 2D shapes and bitmap images
->Canvas -consist of a drawable region defined in HTML code with height and width attributes
          -used  to build graphs, animations, games and image composition.
->javascript code may access the area through a full set of drawing functions
similar to those of other common 2D APIs, thus allowing for dynamucally generated graphics.



understanding the HTML five doctype
-------------------------------------
->document type declaration(DOCTYPE) - is an instruction to the web browser about the version
  of markup language in which a web page is written.
                                     - the first thing defined in an HTML document
                                     -Not an HTML tage.
  ->insure that web pages are displayed the way they are intended to be displayed.
  ->

Canvas  Element size versus Drawing surface Size
---------------------------------------------------
->canvas has two sizes:
        1.the size of the element(canvas) itself 
        2.the size of the element's drawing surface
 ->Setting the element width and height attributes sets both of these sizes.
 ->Css attributes affect only the element's size and not the drawing surface.
 ->Both by default are 300 screen pixels wide and 10 screen pixel hight.
 ->Drawing surface remains unchanged at default value if css is used to set the canvas element and draw sixe
 ->unwanted effect when a canvas element's size does not match the size of its  drawing surface, the browser scales the drawing surface to fit the element.
 


Understanding the canvas coordinate
--------------------------------------
->the canvas is a two-dimensional rectangular area.
->the coordinate of the top-left corner of the canvas are(0,0) which is known as origin,
  the coordinate of the bottom-right corner are(canvas width, canvas height)


Canvas color gradients
---------------------------
->lineargradients
->Radialgradiant
->working with images in Canvas
->Canvas pattern
->Canvas text
->Canvas shadows GlobalApha
->Canvas Clipping

General discussions
----------------------
->Gradient - in the context of the canvas consist of continuously smooth color transitions
  along a vector from one color to another, 
  possibly following by additional transitions along the same vector to other colors.
           -Used anywhere in images, normally as a background element.
           -allow designer to expore new opportunities to provide fresh, clean designs for audience.
           -They are of two types:
                         Linear gradient
                         Radial Gradient
           -Transitions in linear gradients occurs along a straigh line  between two points inclined to an angle or a direction.
           -Created with the use of 
            createLinearGradient() method.
           -Defined by imaginery  line which defines the direction of the gradient.
           -Once created we can insert  color using the 
            addColorstop() method
           -It accepts as arguments a floating point value between 0.0 and 1.0.
           -
                         <script>
                         var canvas=document.getElementById('myCanvas');
                         var context=canvas.getContext('2d');
                         //a rectangle covering entire canvas
                         context.rect(0,0, canvas.width, canvas.height);
                         //add linear gradient(rectangular region)
                         var grd = context.createLinearGradient(0,0,canvas.width, canvas.height);
                         //light blue
                         grd.addColorStop(0, '#8ED3FF');
                         //dark blue
                         grd.addColorStop(1, #004CB3');
                         //use the gradient
                         context.fillstyle=grd;
                         context.fill();
                         </script>


Specifying  a color stop with an RGBa() color value which includes degrees of transparency
---------------------------------------------------------------------------------------
                    <script>
                    var canvas=document.getElementById('DemoCanvas');
                    if (canvas.getContext)
                    {
                    vr ctx = canvas.getContext("2d");
                    
                    var gadient1 = ctx.createLinearGradient(0,0, 50, 0);
                    gradient1.addColorStop(0,'red');
                    gradient1.addColorStop(1, 'rgba(0,0,244,0.4)');
                    ctx.fillStyle = gradient1;
                    ctx.fillRect(0,0,75, 75);
                    
                    var gradient2=ctx.createLinearGradient(0, 0, 50, 0);
                    gradient2.addColorStrop(0, 'red');
                    gradient2.addColorStop(1, 'rgba(0,0,255,0.5)');
                    ctx.fillStyle = gradient2;
                    ctx.fillRect(75, 0, 75, 75);
                    
                    var gradient3= ctx.createLinearGradient(150, 0, 200, 50);
                    gradient3.addColorStop(0, 'red');
                    gradient3.addColorStop(1, 'rgba(0,0,255, 0.5)');
                    ctx.fillStyle= gradient3;
                    ctx.fillRect(150, 0, 75, 75);
                    
                    var gradient4= ctx.createLinearGradient(275, 50, 225, 0);
                    gradient4.addColorStop(0, 'red');
                    gradient4.addColorStop(1, 'rgba(0, 0, 255, 0.5)');
                    ctx.fillStyle = gradient4;
                    ctx.fillRect(255, 0, 75, 75);
                    }
                    </stript>
                

Generating s rainbow colours
--------------------------------
               context.rect(0,0,canvas,width, canvas,height);
               var grd = context.createLinearGradient(0,0,canvas.width, canvas.height);
               grd.addColorStop(0.14, '#FF0000');
               grd.addColorStop(0.28, '#FF7F00');
               grd.addColorStop(0.42, '#FFFF00');
               grd.addColorStop(0.57, '#00FF00');
               grd.addColorStop(0.71, '#0000FF');
               grd.addColorStop(0.85, '#4B0082');
               grd.addColorStop(1.0,'#8F00FF');
               context.fillStyle = grd;
               context.fill();
               
               
         
         
         Radial Gradient
         ---------------------
 ->Define a color change along a clone(a three-dimensional geomeric shape) beween two circles.
 ->created by 
          createRadialGradient() method  
          and passing in two circles and also providing source destination circle radius
          
          
          <sctipt>
          var canvas = document.getElementById('myCanvas');
          var context = canvas.getContext('2d');
          context.rect(0,0, canvas,width, canvas.height);
          
          //Create radial gradient
          var grd = contex.createRadialGradient(238,50, 10, 238, 50, 300);
          
          //light blue
          grd.addColorStop(0, '#8ED7FF');
          
          //dark blue
          grd.addColorStop(1, '#004CB3');
          
          context.fillSyle = grd;
          context.fill();
          context.srokeStyle = '#0000ff';
          context.lineCap = 'square';
          context.stoke();
          </script>
          
->Canvas radial gradient are defined with two imaginary circles.
->a starting circle and an ending circle, in which the gradient(transition) start
with  the start circle and moves towards the end circle.
               
               
      
      
      Canvas Pattern
      --------------------
->pattern - used to fill  or stroke  an object using a pre-defined graphic object
            which can be replaced (tiled) at fixed intervals in x and y to cover the area to be painted.
          -consist of an image source - JPG, GIF, SVG, or the currently playing frame of a vedeo.
          -Created by 
                  createPattern() method, 
                  passing in the image object and a repeat parameters.
                  (returns a pattern object)
                  
                  
                  <body>
                  <canvas id="myCanvas" width="578" height="200"></canvas>
                  <script>
                  var canvas=document.getElementById('mycanvas');
                  var context=canvas.getContext('2d');
                  var imageObj=new image();
                  imageObj.onload=function(){
                  var pattern=context.createPattern(imageObj,'repeat');
                  context.rect(0,0,canvas.width, canvas.height);
                  context.fillStyle=pattern;//set fillStyle property to the pattern object
                  context.fill();//fill the shape using fill()
                  };
                  imageObj.scr='myimage.png';
                  </script>
                  </body>
                  </html>
                  
                 
                  
                  Loding two images-pattern making them nto patterns tha are used to stroke a line and fill a rectangle
                  ------------------------------------------------------------------------------------------------------
                  
                                 <canvas id="mycanvas" width="500" hheight="500"></canvas>
                                 <script>
                                 var canvas=document.getElementById("myCanvas");
                                 if (canvas.getContext){
                                 var ctx=canvas.getContext("2d");
                                 //create new image object to use as pattern 
                                 var image1 = new Image();
                                 var image2 = new Image();
                                 
                                 image1.src = 'pattern1.png';
                                 image2.src = 'pattern3.png';
                                 
                                 var pat1 = ctx.createPattern(image1, "repeat");
                                 var pat2 = ctx.createPattern(image2, "repeat");
                                 ctx.lineWidth = 4;
                                 
                                 //stroke line and fill rect with block pattern 
                                 ctx.beginPath();
                                 ctx.moveTop(50, 10);
                                 ctx.lineTo(150, 10);
                                 ctx.strokeStyle = pat1;
                                 ctx.stroke();
                                 ctx.fillStyle = pat1;
                                 ctx.fillRect(50, 20, 100, 150);
                                 
                                 //stroke line and fill rect with cork pattern
                                 ctx.beginPath();
                                 ctx.moveTo(200, 10);
                                 ctx.lineTo(300, 10);
                                 ctx.strokeStyle = pat2;
                                 ctx.stroke();
                                 ctx.fillStyle = pat2;
                                 ctx.fillRect(200, 20, 100, 150);
                                 }
                                 </script>
                                 
                                 
                                 
                               Working with canvas image
                               ------------------------------
 ->we can draw an image on canvas using 
          drawImage() method
 ->The method requires an image object  and destination point
 ->The destination point defines the top left corner of the image  relative to the top left corner.
  of the canvas.
  ->With the canvas image, you can 
                  set the image size
                  crop an image
 
 
       //drawImage() method require an image object
       //create an image and wait for it to load before instantiating drawImage()
       //accomplish by using the onload property of the image object
       <script>
       var canvas=document.getElementBy
                                 
                                 
                                 
                                 
                  
               
               
               
               
               
