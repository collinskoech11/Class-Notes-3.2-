INTRODUCTION TO SOFTWARE eNGINEERING
--------------------------------------
Course outline 
------------------
->Introduction and background 
      -Software and its evolving  roles
      -Software Quality 
      -software myths
->The software process
      -Engineering in software 
      -process frameworks and patterns
      -overviews of process models and technology
      -overview of SE practices
->SE practice 1: system Engineering
     -Reverse Engineering
     -A look ahead at OO and SOA techniques
->SE Practice 11: Requirements Engineering and the analysis Model
     -formal methods
     -Clean-room SE
     -Components Based Development
     -commercial Off-The-Shelf(COTS) development
->SE practice III :Design Engineering and the architectural artefacts
                  -Design models, 
                  -System architectural designs
                  -Database schemas
->SE practical IV: User interface Design
               -General User Interface Designs
->Software Engineering - the systematic application of engineering 
                         approached/techniques to the development of software.
                       - Engineering branch associated with development of software products
                         using well-defined scientific principles, methods and procedures.
                       - Results into efficient and reliable software products(high quality software products)
                       
                       
                       
    Chapter 2 
    ------------
    software Process(SP)
    -------------------------
    -software process models
    -process activities
    -plan-driven vs agile process 
    -Requirement Engineering
    -Design activities
    -Software Testing
    -Software Evolution
    
 -A structure set of activities required to develop a software system.
 -Different software process
                    Specification - defines what system should do.
                    Design and implementation - define the organization of the
                                               system and implementing the system
                    validation - checks that it does what the customer wants.
                  EVolution - changing  the system in response to changing  customer needs.
 -An abstract representation of a process.
 -It presents a description of a process from some particular perspective.
                       



software process description
---------------------------------
-Talks about the activities such as 
                 specifying a data  model,
                 designing a user interface
                 ordering of activities.
-Also include:
            Products, which are the outcomes of a process activity
            Roles, which reflect the responsibilities of the people in the process.
            Pre-and post-condition -Which are statement that are true before and after a process
            activity has been enacted or product produced.
            
            
            
            
        Plan-driven and agile process
        ---------------------------------
 -Processes where all of the process activities are planned in advance and
 progress is measure against this plan.
 -In agile processes, planning is incremental and it is easier  to change 
 the process to reflect changing customer requirement.
 -In practical, most practical processes
  include element of both plan-driven and agile approach.
 -There are no right or wrong software processes.
 


Software process models
--------------------------
-The waterfall model
 plan-driven model. Separate and distint phases of specification and development.
-Incremental developmentand
 specification, development validation are interleaved.
 may be plan-driven or agile.
-Reuse-oriented software engineering
 The system is assembled from existing component.
 may be plan driven or agile
 
 
 

Agile Methods and software maintenance
----------------------------------------
-Most organisation spend more on maintaining existing 
software than do on new software development.
-So if agile methods are to be successful, they have to
support maintence as well as organisation development.
-systems developed using  an agile approach mainatenance,
given the emphasis in the development process of minimizing formal documentions
-Can agile methods be used effectively for evolving a system in 
response to customer change request


Techical, human, organisation issues
--------------------------------------------
-Are the cultural or organisational issues that may affect the system development
-Traditional engineering  organisation 


Extreme programming(XP)
---------------------
-Perhaps the best-known and most used agile method.
-takes an extreme approach to iterative development.
-principle or practice
               -incremental planning
               -pair programming
               -collective ownerdship
               -continuous integration
               -sustainable base.
               
Testing in XP
-------------------
-Central to XP and XP hasdeveloped an approach.



Additional notes from the internet
--------------------------------------
Used case analysis
-----------------------
-Describe a real usage scenario
-point of view of the user
-Written as list, emphasizing end result and steps taken

.Use Case: record a sale onto  the Syste
.Role: sales staff
.main success scenario
 1.User initiates an "add sale" operation
 2.The software requests for the name and quantity of item sold
 3.the user inputs name and quantity, and confirms the action
 4.the software stores the new entry into the system.
 
 
.Extensions
   2.1 the user has input a quantity less than 1
   2.2 the software indicates to the user that the amount  is invalide
   2.3 the use case returns to step 2
   
   requirement analysis
   -------------------
   functional requirement
   non-functional requirement
     usually a characteristic or property of the system
     eg records must be retrieved within 3 seconds
     
 
prototypes
--------
-Build a (usually non-functional ) system that represents the visual layout and linkag of features
.

planning 
--------------
-modularization
  .one big part of planning 
  . how big program are broken down to small parts
  
-Cohesion - how much the elements of amodule are related
            measured in terms of tasks done or type of data handled
         - high cohesion - task are strongly related
         -low cohision - task dont  relate to each other
-coupling - the degree of dependence modules have among each other.
    
    
    
    Software process
    ----------------------
-Structured set of activities for software developement.

         fundamental aspects
           ------------------------
        -specification - defining what the software should do 
        - design - defining the organisation and the structure of the system
        - implementation and testing - programming the system and checking that it does what the customer wants
        -evalution - checking the system in response to changing customer needs
        -plan-driven processes are processes where all of the process activities are planned in  advanced and progrss  is measured against this plan
  
  
waterfall process
 ------- -------------
 -Brings development proces into a series of actiities
    requirement definition
    system software design
    implementation  and unit testing
    integration and system testing
    operation and maintenance.
    
    
-problem with it is that - the is output in each of the phases , and if the is an 
a modification to be made, should be done in all the phases.
- only appropriate when the requirement are well-understood and changes limited 
 during the design process.
-Used in systems engineering projects where a system is developed at several sites
-th plan-driven nature of the waterfall model helps coordinate the work.


Agile process
---------------
-Based on incremental developmen where process activities are interleaved.
-Minimal documentation
-Aim is to be responsive to change and reduce the time required to deliver usedful functionality to user
-its benefits is that 
    - the cost of implementing changes  to customer requirement is reduced.
    -The amount of analysis and documentation that has to be refone is less than
    is required with waterfall model.
    -It is easier to get customers  feedback on the development work.
    -customers can comment on demonstrations of the software and see how much has bee implemented.
    -software products and apps
    -Business systems
-Its problems is that 
           -the process is  not visible 
           documents helps managers assess progress but in agile processes systems
           it is not cost-effective  to document every version of the system.
          -System structure tends to degrade as new increments are added.
           unless time and money is spent on refactoring to improve the software regular
           change usually corrupts its structure.
           
           
 integration and reuse
 -------------------------
 -systems are integrated from existing components or application systems.
 -Reused elements may be configured to adapt their behaviour and functionality to 
  user requirements.
  
 -stand-alone application systems that are configured for use in a particular environment.
 -reusable components that are intergrated with other reusable and specially writtent components.
 -Requirements are planned in advance but an iterative and agile approach can be taken to design and implementation.
 
  


                       
